[{"/Users/serhiivoloshyn/Desktop/cubex/test/portal/pages/_app.tsx":"1","/Users/serhiivoloshyn/Desktop/cubex/test/portal/pages/api/hello.ts":"2","/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Calendar/index.tsx":"3","/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Layout/index.tsx":"4","/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Users/index.tsx":"5"},{"size":345,"mtime":1673863922725,"results":"6","hashOfConfig":"7"},{"size":307,"mtime":1673852821235,"results":"8","hashOfConfig":"7"},{"size":3919,"mtime":1673880359538,"results":"9","hashOfConfig":"7"},{"size":1328,"mtime":1673871260655,"results":"10","hashOfConfig":"7"},{"size":1980,"mtime":1673873034447,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18v42re",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/serhiivoloshyn/Desktop/cubex/test/portal/pages/_app.tsx",[],[],"/Users/serhiivoloshyn/Desktop/cubex/test/portal/pages/api/hello.ts",[],[],"/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Calendar/index.tsx",[],[],"/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Layout/index.tsx",[],[],"/Users/serhiivoloshyn/Desktop/cubex/test/portal/components/Users/index.tsx",["28"],[],"import React, { useEffect, useState } from 'react';\nimport { Avatar, Divider, List, Skeleton } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\ninterface DataType {\n  gender: string;\n  name: {\n    title: string;\n    first: string;\n    last: string;\n  };\n  email: string;\n  picture: {\n    large: string;\n    medium: string;\n    thumbnail: string;\n  };\n  nat: string;\n}\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<DataType[]>([]);\n\n  const loadMoreData = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    fetch('https://randomuser.me/api/?results=10&inc=name,gender,email,nat,picture&noinfo')\n      .then((res) => res.json())\n      .then((body) => {\n        setData([...data, ...body.results]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    loadMoreData();\n  }, []);\n\n  return (\n    <div\n      id=\"scrollableDiv\"\n      style={{\n        height: 400,\n        overflow: 'auto',\n        padding: '0 16px',\n        border: '1px solid rgba(140, 140, 140, 0.35)',\n      }}\n    >\n      <InfiniteScroll\n        dataLength={data.length}\n        next={loadMoreData}\n        hasMore={data.length < 50}\n        loader={<Skeleton avatar paragraph={{ rows: 1 }} active />}\n        endMessage={<Divider plain>It is all, nothing more ü§ê</Divider>}\n        scrollableTarget=\"scrollableDiv\"\n      >\n        <List\n          dataSource={data}\n          renderItem={(item) => (\n            <List.Item key={item.email} actions={[<a key=\"list-loadmore-edit\">edit</a>]}>\n              <List.Item.Meta\n                avatar={<Avatar src={item.picture.large} />}\n                title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                description={item.email}\n              />\n            </List.Item>\n          )}\n        />\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default App;",{"ruleId":"29","severity":1,"message":"30","line":43,"column":6,"nodeType":"31","endLine":43,"endColumn":8,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMoreData'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [loadMoreData]",{"range":"36","text":"37"},[959,961],"[loadMoreData]"]